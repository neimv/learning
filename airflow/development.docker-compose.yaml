---
version: '3'
x-airflow-common:
   &airflow-common
   
   build: 
    &airflow-common-build
    context: .
    dockerfile: dev.Dockerfile
   environment:
     &airflow-common-env
     AIRFLOW__CORE__EXECUTOR: LocalExecutor
     AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DB}
     AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.session'
     AIRFLOW__CORE__FERNET_KEY: ${FERNET_KEY}
     AIRFLOW__WEBSERVER__INSTANCE_NAME: Development
     AIRFLOW__WEBSERVER__NAVBAR_COLOR: '#FFFFF'
   volumes:
      &airflow-common-volumes
      - ${DAGS}:/opt/airflow/dags
      - ${LOGS}:/opt/airflow/logs
      - ${PLUGINS}:/opt/airflow/plugins
      - ${TESTS}:/opt/airflow/tests
   user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
   env_file: .env
   depends_on:
     &airflow-common-depends_on
     postgres:
       condition: service_healthy

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: always
    ports:
      - 5432:5432

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command: 
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
        /entrypoint airflow variables import default_variables.json
        /entrypoint airflow connections import default_connections.json
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_DEFAULT_USER}
      _AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_DEFAULT_PASSWORD}
    user: "0:0"

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - ${PORT}:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    depends_on:
      <<: *airflow-common-depends_on
      airflow-init:
        condition: service_completed_successfully
    
  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always
    depends_on:
      <<: *airflow-common-depends_on
      airflow-init:
        condition: service_completed_successfully

  airflow-cli:
    build:
      context: .
      dockerfile: dev.Dockerfile
    environment:
      <<: *airflow-common-env
      CONNECTION_CHECK_MAX_COUNT: "0"
    # Workaround for entrypoint issue. See: https://github.com/apache/airflow/issues/16252
    volumes:
      - ${DAGS}:/opt/airflow/dags
      - ${LOGS}:/opt/airflow/logs
      - ${PLUGINS}:/opt/airflow/plugins
      - ${TESTS}:/opt/airflow/tests
    user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
    env_file: .env
    command:
      - bash
      - -c
      - airflow 
      - version

volumes:
  logs:
  db-data:
